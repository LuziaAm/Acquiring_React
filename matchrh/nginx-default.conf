# nginx-default.conf - Configuração do servidor para RecruitAI

server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # Configurações de segurança
    server_tokens off;
    
    # Configurações para SPA (Single Page Application)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache para HTML (sem cache)
        location ~* \.html$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }
    
    # Cache para assets estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # Compressão gzip para assets
        gzip_static on;
    }
    
    # Service Worker - sem cache
    location /service-worker.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        add_header Service-Worker-Allowed "/";
    }
    
    # Manifest.json
    location /manifest.json {
        add_header Content-Type "application/manifest+json";
        add_header Cache-Control "public, max-age=86400";
    }
    
    # Sitemap e robots.txt
    location ~* \.(xml|txt)$ {
        add_header Content-Type "text/plain";
        expires 1d;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # API endpoints (para futuras implementações)
    location /api/ {
        # Rate limiting para API
        limit_req zone=api burst=20 nodelay;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # Proxy para backend (quando implementado)
        # proxy_pass http://backend:3001;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_cache_bypass $http_upgrade;
        
        # Por enquanto, retornar 404 para rotas de API não implementadas
        return 404 '{"error": "API endpoint not implemented"}';
        add_header Content-Type application/json;
    }
    
    # Security: negar acesso a arquivos sensíveis
    location ~ /\. {
        deny all;
    }
    
    location ~ ~$ {
        deny all;
    }
    
    location ~* \.(env|log|htaccess|htpasswd|ini|php|sh|sql|conf)$ {
        deny all;
    }
    
    # Redirecionamentos para melhor SEO
    location = /dashboard {
        return 302 /?tab=dashboard;
    }
    
    location = /candidates {
        return 302 /?tab=candidates;
    }
    
    location = /jobs {
        return 302 /?tab=jobs;
    }
    
    location = /register {
        return 302 /?tab=register;
    }
    
    location = /home {
        return 301 /;
    }
    
    # Error pages customizadas
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
        root /usr/share/nginx/html;
    }
    
    location = /50x.html {
        internal;
        root /usr/share/nginx/html;
    }
    
    # Logs específicos para este servidor
    access_log /var/log/nginx/recruitai_access.log;
    error_log /var/log/nginx/recruitai_error.log;
}

# Servidor de redirecionamento HTTPS (para quando SSL for configurado)
# server {
#     listen 443 ssl http2;
#     server_name recruitai.com www.recruitai.com;
#     
#     ssl_certificate /etc/ssl/certs/recruitai.crt;
#     ssl_certificate_key /etc/ssl/private/recruitai.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # Incluir configuração padrão aqui...
# }